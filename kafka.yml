# https://hub.docker.com/r/wurstmeister/kafka/tags/
# 9999 - JMX zookeeper
# 9998 - JMX kafka
# 
version: '2.2'
services:
  kafka-zookeeper:
    build: 
      context: .
      dockerfile: kafka.Dockerfile
    image: defreitas/kafka:1.0.0
    container_name: kafka
    network_mode: bridge
    hostname: kafka.dev
    mem_limit: 1500m
    memswap_limit: 0
    volumes:
      - ./kafka/config/:/opt/kafka/config
    healthcheck:
      test: [CMD, "echo", "0"]
      interval: 3s
#      interval: 1m30s
      timeout: 10s
      retries: 3
    ports:
      - 9092:9092
      - 2181:2181
    environment:
      - HOSTNAMES=kafka.intranet
  stg-kafka:
    container_name: stg-kafka
    #depends_on: 
    #  - kafka-manager
    extends: kafka-zookeeper
    volumes:
      - /opt/databases/stg/logging:/opt/kafka/logs/
      - /opt/databases/stg/kafka/logs/:/tmp/kafka-logs
      - /opt/databases/stg/zookeeper/logs/:/tmp/zookeeper
  prod-kafka:
    container_name: prod-kafka
    #depends_on: 
    #  - kafka-manager
    extends: kafka-zookeeper
    volumes:
      - /opt/databases/stg/logging:/opt/kafka/logs/
      - /opt/databases/prod/kafka/logs/:/tmp/kafka-logs
      - /opt/databases/prod/zookeeper/logs/:/tmp/zookeeper
    hostname: kafka.prod

  kafka-manager:
    image: sheepkiller/kafka-manager
    ports:
      - 9000:9000
    environment:
      - ZK_HOSTS=kafka.intranet:2181
      - APPLICATION_SECRET=admin
    hostname: kafka-manager.dev
    mem_limit: 500m
    memswap_limit: 0
    network_mode: bridge