# https://hub.docker.com/r/wurstmeister/kafka/tags/
version: '2.2'
services:
  kafka-zookeeper:
    build: 
      context: .
      dockerfile: kafka.Dockerfile
    image: defreitas/kafka:1.0.0
    container_name: kafka
    network_mode: bridge
    hostname: kafka.dev
    mem_limit: 2048m
    memswap_limit: 0
    volumes:
      - ./kafka/config/:/opt/kafka/config
    healthcheck:
      test: [CMD, "echo", "0"]
      interval: 3s
#      interval: 1m30s
      timeout: 10s
      retries: 3
    ports:
      - 9092:9092
      - 2181:2181
    environment:
      - HOSTNAMES=kafka.intranet
      - JMX_PORT=9999
  kafka-stg:
    container_name: stg-kafka
    extends: kafka-zookeeper
    volumes:
      - /opt/databases/kafka-stg/logs/:/tmp/kafka-logs
  kafka-prod:
    container_name: prod-kafka
    extends: kafka-zookeeper
    volumes:
      - /opt/databases/kafka-prod/logs/:/tmp/kafka-logs
    hostname: kafka.prod
  lenses:
    image: landoop/lenses
    environment:
      LENSES_PORT: 9991
      LENSES_KAFKA_BROKERS: "PLAINTEXT://kafka.dev:9092"
      LENSES_ZOOKEEPER_HOSTS: "kafka.dev:2181"
      LENSES_SCHEMA_REGISTRY_URLS: "http://schema.registry.1.url:8081,http://schema.registry.2.url:8081"
      LENSES_CONNECT_CLUSTERS: '[{name: "production", url: "http://connect.worker.1.url:8083,http://connect.worker.2.url:8083", statuses: "connect-statuses", configs: "connect-configs", offsets: "connect-offsets"}]'
      LENSES_JMX_ZOOKEEPERS: "kafka.dev:9585"
      LENSES_JMX_CONNECT: '[{production: "connect.worker.1.url:9584,connect.worker.2.url:9584,connect.worker.3.url:9584"}]'
      LENSES_SECURITY_MODE: BASIC
      # Secrets can also be passed as files. Check _examples/
      LENSES_SECURITY_USERS: |
        [
          {"username": "admin", "password": "admin", "displayname": "Lenses Admin", "roles": ["admin", "write", "read"]},
          {"username": "writer", "password": "writer", "displayname": "Lenses Writer", "roles": ["read", "write"]},
          {"username": "reader", "password": "reader", "displayname": "Lenses Reader", "roles": ["read"]},
          {"username": "nodata", "password": "nodata", "displayname": "Lenses NoData", "roles": ["nodata"]}
        ]
    ports:
      - 9991:9991
    volumes:
      - ./license.json:/license.json
    network_mode: bridge